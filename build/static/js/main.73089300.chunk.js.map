{"version":3,"sources":["components/Post.jsx","res/pic1.jpg","res/pic2.jpg","pages/Gallery.jsx","pages/About.jsx","utils/misc.jsx","pages/NewPost.jsx","components/DateDrawer.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","card","height","media","position","minHeight","minWidth","navbeforebutton","background","color","top","left","navnextbutton","right","comment","marginLeft","avatar","backgroundColor","red","Post","props","classes","React","useState","p_index","setIndex","max","data","image","length","className","Card","raised","CardHeader","Avatar","aria-label","username","action","IconButton","title","subheader","date","CardMedia","imagetitle","Button","onClick","fontSize","CardContent","Typography","variant","component","text","CardActions","disableSpacing","fakedata","_id","pic2","pic1","palette","paper","fab","bottom","Gallery","Grid","container","item","lg","xs","to","style","textDecoration","Fab","About","getFormattedDate","newDate","Date","day","getUTCDate","toString","month","getUTCMonth","year","getUTCFullYear","padding","line","width","description","maxWidth","input","display","imageButton","publishButton","NewPost","selectedImages","selectNew","removeImage","index","splice","concat","console","log","Paper","TextField","id","label","defaultValue","type","InputLabelProps","shrink","rows","rowsMax","multiline","map","img","src","accept","multiple","onChange","event","reader","FileReader","readFile","file","target","files","onload","result","readAsDataURL","htmlFor","drawer","breakpoints","up","flexShrink","drawerPaper","DateDrawer","Drawer","anchor","open","onClose","Toggle","ModalProps","keepMounted","toolbar","List","ListItem","button","ListItemText","primary","link","margin","Header","drawerOpen","setDrawerOpen","handleDrawerToggle","window","location","pathname","AppBar","Toolbar","md","exact","path","edge","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73089300.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport { Button, Fab, Grid } from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextRounded\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  media: {\r\n    paddingTop: \"80.25%\", // 16:9\r\n    position: \"relative\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"100%\",\r\n  },\r\n  navbeforebutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  navnextbutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  comment: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const [p_index, setIndex] = React.useState(0);\r\n  const max = props.data.image.length;\r\n\r\n  const next_photo = () => {\r\n    if (p_index + 1 == max) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(p_index + 1);\r\n    }\r\n  };\r\n\r\n  const prev_photo = () => {\r\n    if (p_index == 0) {\r\n      setIndex(max - 1);\r\n    } else {\r\n      setIndex(p_index - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card raised={false}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {props.data.username}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          }\r\n          title={props.data.title}\r\n          subheader={props.data.date}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.data.image[p_index]}\r\n          title={props.data.imagetitle}\r\n        >\r\n          <Button className={classes.navbeforebutton} onClick={prev_photo}>\r\n            <NavigateBeforeIcon fontSize=\"large\" />\r\n          </Button>\r\n\r\n          <Button className={classes.navnextbutton} onClick={next_photo}>\r\n            <NavigateNextIcon fontSize=\"large\" />\r\n          </Button>\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.data.text}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n          <IconButton className={classes.comment} aria-label=\"comment\">\r\n            <MessageIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/pic1.2fb818a5.jpg\";","export default __webpack_public_path__ + \"static/media/pic2.959e5312.jpg\";","import React from \"react\";\r\nimport { Fab, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Post from \"../components/Post\";\r\nimport pic1 from \"../res/pic1.jpg\";\r\nimport pic2 from \"../res/pic2.jpg\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst fakedata = {\r\n  _id: \"5264651\",\r\n  username: \"SZ\",\r\n  title: \"OMS\",\r\n  date: \"2020 Jan 1\",\r\n  image: [pic2, pic1],\r\n  text:\r\n    \"This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Gallery = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Post data={fakedata} />\r\n          <Post data={fakedata} />\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n\r\n      <Link to=\"/newpost\" style={{ textDecoration: \"none\" }}>\r\n        <Fab color=\"primary\" className={classes.fab} aria-label=\"add\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h1\">This is about</Typography>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { ContactsOutlined } from \"@material-ui/icons\";\r\n\r\nconst getFormattedDate = () => {\r\n  const newDate = new Date();\r\n  let day = newDate.getUTCDate().toString();\r\n  let month = (newDate.getUTCMonth() + 1).toString();\r\n  let year = newDate.getUTCFullYear().toString();\r\n  if (day.length < 2) day = \"0\" + day;\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\nexport default getFormattedDate;\r\n","import React from \"react\";\r\nimport {\r\n  Fab,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport getFormattedDate from \"../utils/misc\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    minHeight: \"200px\",\r\n    padding: \"1rem\",\r\n  },\r\n  line: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    width: \"45%\",\r\n    spacing: theme.spacing(1),\r\n  },\r\n  date: {\r\n    width: \"45%\",\r\n    marginLeft: \"5%\",\r\n  },\r\n  description: {\r\n    width: \"95%\",\r\n  },\r\n  image: {\r\n    maxWidth: \"95%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  imageButton: {\r\n    backgroundColor: \"black\",\r\n    color: \"gray\",\r\n  },\r\n  publishButton: {\r\n    backgroundColor: \"inherit\",\r\n    color: \"orange\",\r\n  },\r\n}));\r\n\r\nconst NewPost = (props) => {\r\n  const classes = useStyles();\r\n  const date = getFormattedDate();\r\n  const [selectedImages, selectNew] = React.useState([]);\r\n\r\n  const handleUploadClick = (event) => {\r\n    let data = [];\r\n    const reader = new FileReader();\r\n    const readFile = (index) => {\r\n      let file = event.target.files[index];\r\n      if (index >= event.target.files.length) {\r\n        selectNew(selectedImages.concat(data));\r\n        return;\r\n      }\r\n      reader.onload = (event) => {\r\n        data = data.concat(reader.result);\r\n        readFile(index + 1);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    readFile(0);\r\n  };\r\n\r\n  const removeImage = (index) => {\r\n    return () => {\r\n      selectedImages.splice(index, 1);\r\n      selectNew(selectedImages.concat([]));\r\n      console.log(selectedImages);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Paper className={classes.root}>\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.title}\r\n              />\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                defaultValue={date}\r\n                className={classes.date}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"text\"\r\n                label=\"Description\"\r\n                rows={4}\r\n                rowsMax={4}\r\n                multiline\r\n                className={classes.description}\r\n              />\r\n            </div>\r\n\r\n            {selectedImages.map((img, index) => (\r\n              <div className={classes.line}>\r\n                <img\r\n                  src={img}\r\n                  className={classes.image}\r\n                  onClick={removeImage(index)}\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            <div className={classes.line}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleUploadClick}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <IconButton\r\n                  component=\"span\"\r\n                  className={classes.imageButton}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <AddPhotoAlternateIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <Button className={classes.publishButton} variant=\"outlined\">\r\n                <PublishIcon></PublishIcon>\r\n                <Typography>Publish</Typography>\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n}));\r\n\r\nconst DateDrawer = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        onClose={props.Toggle}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n      >\r\n        <div>\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {[\"May\", \"April\", \"March\", \"Feburary\"].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DateDrawer;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DateDrawer from \"./DateDrawer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  link: {\r\n    position: \"relative\",\r\n    top: \"1em\",\r\n    background: \"white\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  console.log(window.location.pathname);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2} md={1}>\r\n              <Route exact path=\"/\">\r\n                <IconButton\r\n                  aria-label=\"dates\"\r\n                  edge=\"end\"\r\n                  className={classes.button}\r\n                  onClick={handleDrawerToggle}\r\n                >\r\n                  <DateRangeIcon />\r\n                </IconButton>\r\n              </Route>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>Gallery</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>About</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            {/*middle spacing*/}\r\n            <Grid item xs={2} md={6} lg={8} />\r\n\r\n            <Grid item xs={2} md={1}>\r\n              <IconButton\r\n                aria-label=\"login\"\r\n                edge=\"end\"\r\n                className={classes.button}\r\n              >\r\n                <AccountCircleIcon size=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n\r\n      <Route exact path=\"/\">\r\n        <DateDrawer open={drawerOpen} Toggle={handleDrawerToggle} />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport About from \"./pages/About\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Header from \"./components/Header\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" exact component={Gallery} />\r\n          <Route exact path=\"/about\" exact component={About} />\r\n          <Route path=\"/newpost\" exact component={NewPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}