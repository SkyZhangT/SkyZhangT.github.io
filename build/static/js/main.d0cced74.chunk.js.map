{"version":3,"sources":["components/drawer.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","map","text","index","ListItem","button","ListItemText","primary","container","undefined","document","body","className","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","createMuiTheme","palette","main","typography","fontFamily","h4","fontWeight","fontSize","lineHeight","h6","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0cced74.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\t// necessary for content to be below app bar\n\ttoolbar: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nfunction ResponsiveDrawer(props) {\n\tconst { window } = props;\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<List>\n\t\t\t\t{[\n\t\t\t\t\t\"About\",\n\t\t\t\t\t\"Education\",\n\t\t\t\t\t\"Work Experience\",\n\t\t\t\t\t\"Side Projects\",\n\t\t\t\t\t\"Course Work\",\n\t\t\t\t].map((text, index) => (\n\t\t\t\t\t<ListItem button key={text}>\n\t\t\t\t\t\t<ListItemText primary={text} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</div>\n\t);\n\n\tconst container =\n\t\twindow !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tResponsive drawer\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t</div>\n\t);\n}\n\nexport default ResponsiveDrawer;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport ResponsiveDrawer from \"./components/drawer\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: \"#2e1667\",\n\t\t},\n\t},\n\ttypography: {\n\t\tfontFamily: [\"Roboto\"],\n\t\th4: {\n\t\t\tfontWeight: 600,\n\t\t\tfontSize: 28,\n\t\t\tlineHeight: \"2rem\",\n\t\t},\n\t\th6: {\n\t\t\tfontWeight: 100,\n\t\t\tlineHeight: \"2rem\",\n\t\t},\n\t},\n});\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<ResponsiveDrawer />\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}