{"version":3,"sources":["components/Post.jsx","res/pic2.jpg","res/pic1.jpg","pages/Gallery.jsx","pages/About.jsx","utils/misc.jsx","components/Dialog.jsx","pages/NewPost.jsx","components/DateDrawer.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","card","height","media","position","minHeight","minWidth","navbeforebutton","background","color","top","left","navnextbutton","right","comment","marginLeft","avatar","backgroundColor","red","Post","props","classes","React","useState","p_index","setIndex","max","data","image","length","next_photo","prev_photo","className","Card","raised","CardHeader","Avatar","aria-label","username","action","IconButton","title","subheader","date","CardMedia","imagetitle","console","log","Fragment","Button","onClick","fontSize","CardContent","Typography","variant","component","text","CardActions","disableSpacing","fakedata","_id","pic2","palette","paper","fab","bottom","Gallery","Grid","container","item","lg","xs","to","style","textDecoration","Fab","About","getFormattedDate","newDate","Date","day","getUTCDate","toString","month","getUTCMonth","year","getUTCFullYear","confirm","textAlign","SimpleDialog","onClose","open","Notification","Dialog","aria-labelledby","DialogTitle","id","List","ListItem","button","padding","line","width","description","maxWidth","input","display","imageButton","publishButton","NewPost","selectedImages","selectNew","uploadFiles","setUploadFiles","setTitle","setBody","now","setDate","setToken","titleError","setTitleError","bodyError","setBodyError","dateError","setDateError","tokenError","setTokenError","imageLoading","setImageLoading","setOpen","handleRemoveImage","index","splice","concat","Paper","TextField","label","type","error","onChange","event","target","value","defaultValue","InputLabelProps","shrink","dateStr","split","NaN","getTime","rows","rowsMax","multiline","map","img","src","alt","CircularProgress","loading","accept","multiple","reader","FileReader","files","f","push","readFile","file","onload","result","readAsDataURL","htmlFor","e","formdata","FormData","append","axios","url","method","headers","then","res","catch","err","drawer","breakpoints","up","flexShrink","drawerPaper","DateDrawer","Drawer","anchor","Toggle","ModalProps","keepMounted","toolbar","ListItemText","primary","link","margin","Header","drawerOpen","setDrawerOpen","handleDrawerToggle","window","location","pathname","AppBar","Toolbar","md","exact","path","edge","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92cf3494.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextRounded\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  media: {\r\n    paddingTop: \"80.25%\", // 16:9\r\n    position: \"relative\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"100%\",\r\n  },\r\n  navbeforebutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  navnextbutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  comment: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const [p_index, setIndex] = React.useState(0);\r\n  const max = props.data.image.length;\r\n\r\n  const next_photo = () => {\r\n    if (p_index + 1 === max) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(p_index + 1);\r\n    }\r\n  };\r\n\r\n  const prev_photo = () => {\r\n    if (p_index === 0) {\r\n      setIndex(max - 1);\r\n    } else {\r\n      setIndex(p_index - 1);\r\n    }\r\n  };\r\n\r\n  const navButton = () => {\r\n    console.log(props.data.image.length);\r\n    if (props.data.image.length > 1) {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={classes.navbeforebutton} onClick={prev_photo}>\r\n            <NavigateBeforeIcon fontSize=\"large\" />\r\n          </Button>\r\n\r\n          <Button className={classes.navnextbutton} onClick={next_photo}>\r\n            <NavigateNextIcon fontSize=\"large\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card raised={false}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {props.data.username}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          }\r\n          title={props.data.title}\r\n          subheader={props.data.date}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.data.image[p_index]}\r\n          title={props.data.imagetitle}\r\n        >\r\n          {navButton()}\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.data.text}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n          <IconButton className={classes.comment} aria-label=\"comment\">\r\n            <MessageIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/pic2.959e5312.jpg\";","export default __webpack_public_path__ + \"static/media/pic1.2fb818a5.jpg\";","import React from \"react\";\r\nimport { Fab, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Post from \"../components/Post\";\r\nimport pic1 from \"../res/pic1.jpg\";\r\nimport pic2 from \"../res/pic2.jpg\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst fakedata = {\r\n  _id: \"5264651\",\r\n  username: \"SZ\",\r\n  title: \"OMS\",\r\n  date: \"2020 Jan 1\",\r\n  image: [pic2],\r\n  text:\r\n    \"This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Gallery = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Post data={fakedata} />\r\n          <Post data={fakedata} />\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n\r\n      <Link to=\"/newpost\" style={{ textDecoration: \"none\" }}>\r\n        <Fab color=\"primary\" className={classes.fab} aria-label=\"add\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h1\">This is about</Typography>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const getFormattedDate = () => {\r\n  const newDate = new Date();\r\n  let day = newDate.getUTCDate().toString();\r\n  let month = (newDate.getUTCMonth() + 1).toString();\r\n  let year = newDate.getUTCFullYear().toString();\r\n  if (day.length < 2) day = \"0\" + day;\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\nexport default getFormattedDate;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  confirm: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, open, Notification } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleListItemClick = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">{Notification}</DialogTitle>\r\n      <List>\r\n        <ListItem button onClick={handleListItemClick}>\r\n          <Typography className={classes.confirm}>OK</Typography>\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getFormattedDate from \"../utils/misc\";\r\nimport SimpleDialog from \"../components/Dialog\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    minHeight: \"200px\",\r\n    padding: \"1rem\",\r\n  },\r\n  line: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    width: \"45%\",\r\n    spacing: theme.spacing(1),\r\n  },\r\n  date: {\r\n    width: \"45%\",\r\n    marginLeft: \"5%\",\r\n  },\r\n  description: {\r\n    width: \"95%\",\r\n  },\r\n  image: {\r\n    maxWidth: \"95%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  imageButton: {\r\n    backgroundColor: \"black\",\r\n    color: \"gray\",\r\n  },\r\n  publishButton: {\r\n    backgroundColor: \"inherit\",\r\n    color: \"orange\",\r\n  },\r\n}));\r\n\r\nconst NewPost = (props) => {\r\n  const classes = useStyles();\r\n  const [selectedImages, selectNew] = React.useState([]);\r\n  const [uploadFiles, setUploadFiles] = React.useState([]);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [body, setBody] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(Date.now());\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [titleError, setTitleError] = React.useState(true);\r\n  const [bodyError, setBodyError] = React.useState(true);\r\n  const [dateError, setDateError] = React.useState(false);\r\n  const [tokenError, setTokenError] = React.useState(true);\r\n  const [imageLoading, setImageLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // title input logic\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTitleError(false);\r\n    } else {\r\n      setTitleError(true);\r\n    }\r\n  };\r\n\r\n  // set body description\r\n  const handleBodyChange = (event) => {\r\n    setBody(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setBodyError(false);\r\n    } else {\r\n      setBodyError(true);\r\n    }\r\n  };\r\n\r\n  // set token\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTokenError(false);\r\n    } else {\r\n      setTokenError(true);\r\n    }\r\n  };\r\n\r\n  // set date\r\n  const handleDateChange = (event) => {\r\n    let dateStr = event.target.value.split(\"-\");\r\n    let newDate = new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\r\n    if (newDate.getTime() == NaN || newDate.getTime() > Date.now()) {\r\n      setDateError(true);\r\n    } else {\r\n      setDateError(false);\r\n      console.log(newDate.getTime());\r\n      setDate(newDate.getTime());\r\n    }\r\n  };\r\n\r\n  // image selecting logic\r\n  const handleAddImage = (event) => {\r\n    setImageLoading(true);\r\n    let data = [];\r\n    const reader = new FileReader();\r\n    for (const f of event.target.files) {\r\n      uploadFiles.push(f);\r\n    }\r\n\r\n    const readFile = (index) => {\r\n      let file = event.target.files[index];\r\n      if (index >= event.target.files.length) {\r\n        selectNew(selectedImages.concat(data));\r\n        setImageLoading(false);\r\n        return;\r\n      }\r\n      reader.onload = (event) => {\r\n        data = data.concat(reader.result);\r\n        readFile(index + 1);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    readFile(0);\r\n  };\r\n\r\n  // image remove logic\r\n  const handleRemoveImage = (index) => {\r\n    return () => {\r\n      selectedImages.splice(index, 1);\r\n      selectNew(selectedImages.concat([]));\r\n      uploadFiles.splice(index, 1);\r\n      setUploadFiles(uploadFiles.concat([]));\r\n    };\r\n  };\r\n\r\n  // display loading circle\r\n  const loading = () => {\r\n    if (imageLoading) {\r\n      return (\r\n        <div className={classes.line}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // upload logic\r\n  const handleUpload = (e) => {\r\n    if (titleError || bodyError || dateError || uploadFiles.length === 0) {\r\n      handleClickOpen();\r\n      return;\r\n    }\r\n\r\n    for (const f of uploadFiles) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"image\", f);\r\n\r\n      axios({\r\n        url: \"http://localhost:8080/image\",\r\n        method: \"post\",\r\n        data: formdata,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Paper className={classes.root}>\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.title}\r\n                onChange={handleTitleChange}\r\n              />\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                error={dateError}\r\n                defaultValue={getFormattedDate()}\r\n                className={classes.date}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"text\"\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                error={bodyError}\r\n                rows={4}\r\n                rowsMax={4}\r\n                multiline\r\n                className={classes.description}\r\n                onChange={handleBodyChange}\r\n              />\r\n            </div>\r\n\r\n            {selectedImages.map((img, index) => (\r\n              <div className={classes.line} key={\"img\" + index.toString()}>\r\n                <img\r\n                  src={img}\r\n                  className={classes.image}\r\n                  onClick={handleRemoveImage(index)}\r\n                  alt=\"Failed to load\"\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            {loading()}\r\n\r\n            <div className={classes.line}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleAddImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <IconButton\r\n                  component=\"span\"\r\n                  className={classes.imageButton}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <AddPhotoAlternateIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"token\"\r\n                label=\"Pass Token\"\r\n                type=\"text\"\r\n                error={tokenError}\r\n                className={classes.title}\r\n                onChange={handleTokenChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <Button\r\n                className={classes.publishButton}\r\n                variant=\"outlined\"\r\n                onClick={handleUpload}\r\n              >\r\n                <PublishIcon></PublishIcon>\r\n                <Typography>Publish</Typography>\r\n              </Button>\r\n            </div>\r\n            <SimpleDialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              Notification=\"Invalid Post\"\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n}));\r\n\r\nconst DateDrawer = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        onClose={props.Toggle}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n      >\r\n        <div>\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {[\"May\", \"April\", \"March\", \"Feburary\"].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DateDrawer;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DateDrawer from \"./DateDrawer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  link: {\r\n    position: \"relative\",\r\n    top: \"1em\",\r\n    background: \"white\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  console.log(window.location.pathname);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2} md={1}>\r\n              <Route exact path=\"/\">\r\n                <IconButton\r\n                  aria-label=\"dates\"\r\n                  edge=\"end\"\r\n                  className={classes.button}\r\n                  onClick={handleDrawerToggle}\r\n                >\r\n                  <DateRangeIcon />\r\n                </IconButton>\r\n              </Route>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>Gallery</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>About</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            {/*middle spacing*/}\r\n            <Grid item xs={2} md={6} lg={8} />\r\n\r\n            <Grid item xs={2} md={1}>\r\n              <IconButton\r\n                aria-label=\"login\"\r\n                edge=\"end\"\r\n                className={classes.button}\r\n              >\r\n                <AccountCircleIcon size=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n\r\n      <Route exact path=\"/\">\r\n        <DateDrawer open={drawerOpen} Toggle={handleDrawerToggle} />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport About from \"./pages/About\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Header from \"./components/Header\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Gallery} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/newpost\" component={NewPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}