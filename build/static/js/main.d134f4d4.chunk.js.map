{"version":3,"sources":["config/config.jsx","utils/network.jsx","components/Post.jsx","res/Gintama.jpeg","pages/Gallery.jsx","components/Sidebar.jsx","pages/About.jsx","utils/misc.jsx","components/Dialog.jsx","components/ProgressBar.jsx","pages/NewPost.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["root_url","makeRequest","path","method","auth","contentType","data","Promise","resolve","reject","axios","url","headers","Authorization","then","res","console","log","catch","err","useStyles","makeStyles","theme","card","height","media","paddingTop","position","objectFit","justifyContent","alignItems","backgroundColor","navbeforebutton","background","color","top","left","minHeight","minWidth","navnextbutton","right","imageClick","radioGroup","comment","marginLeft","avatar","red","Post","props","classes","React","useState","p_index","setIndex","anchorEl","setAnchorEl","faved","setFaved","likes","setLikes","date","Date","time","max","images","length","name","user","split","forEach","s","charAt","next_photo","prev_photo","handleRadioChange","e","parseInt","target","value","handleFavClick","a","id","inc","status","handleClose","Card","raised","className","CardHeader","Avatar","aria-label","action","IconButton","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Typography","title","location","subheader","toString","CardMedia","image","Fragment","Button","fontSize","Paper","window","elevation","CardActions","disableSpacing","map","_","index","Radio","checked","onChange","size","CardContent","variant","component","text","style","root","palette","paper","fab","bottom","spacing","Gallery","pageNumber","setPageNumber","posts","setPosts","loading","setLoading","error","setError","hasMore","setHasMore","useEffect","params","page","cancelToken","CancelToken","c","concat","isCancel","usePostSearch","observer","useRef","lastPostRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Grid","container","item","lg","xs","post","ref","CircularProgress","loadingButton","width","src","gintama","alt","paddingBottom","errorMessage","to","textDecoration","Fab","drawerWidth","display","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","toolbar","mixins","drawerPaper","zIndex","content","flexGrow","padding","Sidebar","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","undefined","document","body","CssBaseline","edge","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","xsDown","paragraph","About","getFormattedDate","newDate","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","SimpleDialog","Notification","Dialog","aria-labelledby","DialogTitle","LinearProgressWithLabel","Box","mr","LinearProgress","Math","round","line","description","maxWidth","input","imageButton","publishButton","NewPost","selectedImages","selectNew","uploadFiles","setUploadFiles","setTitle","setBody","setLocation","now","setDate","token","setToken","titleError","setTitleError","bodyError","setBodyError","locationError","setLocationError","dateError","setDateError","tokenError","setTokenError","imageLoading","setImageLoading","openDialog","setOpenDialog","progress","setProgress","transferState","setTransferState","handleRemoveImage","splice","handleUpload","total","i","formdata","FormData","append","result","push","TextField","label","type","defaultValue","InputLabelProps","shrink","dateStr","getTime","rows","rowsMax","multiline","img","accept","multiple","reader","FileReader","files","f","readFile","file","onload","readAsDataURL","htmlFor","disabled","appbar","link","button","margin","Header","AppBar","Toolbar","sm","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d134f4d4.chunk.js","sourcesContent":["export const root_url = \"https://oc43214.ml\";\r\n","import axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\n\r\nconst makeRequest = (path, method, auth, contentType, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      url: root_url + path,\r\n      method: method,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": contentType,\r\n        Authorization: auth,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default makeRequest;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Card,\r\n  MenuItem,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Avatar,\r\n  IconButton,\r\n  Typography,\r\n  Radio,\r\n  CardActionArea,\r\n  Paper,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextRounded\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { root_url } from \"../config/config\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport makeRequest from \"../utils/network\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  media: {\r\n    paddingTop: \"77.25%\", // 16:9\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    objectFit: \"fill\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#e8eaed\",\r\n  },\r\n  navbeforebutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  navnextbutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  imageClick: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    top: \"10%\",\r\n    right: \"25%\",\r\n    minHeight: \"80%\",\r\n    minWidth: \"50%\",\r\n  },\r\n  radioGroup: { justifyContent: \"center\" },\r\n  comment: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = props;\r\n  const [p_index, setIndex] = React.useState(0);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [faved, setFaved] = React.useState(false);\r\n  const [likes, setLikes] = React.useState(data.likes);\r\n\r\n  var date = new Date(data.time);\r\n  const max = data.images.length;\r\n  var name = \"\";\r\n\r\n  data.user.split(\" \").forEach((s) => {\r\n    name = name + s.charAt(0);\r\n  });\r\n\r\n  const next_photo = () => {\r\n    if (p_index + 1 === max) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(p_index + 1);\r\n    }\r\n  };\r\n\r\n  const prev_photo = () => {\r\n    if (p_index === 0) {\r\n      setIndex(max - 1);\r\n    } else {\r\n      setIndex(p_index - 1);\r\n    }\r\n  };\r\n\r\n  const navButton = () => {\r\n    if (data.images.length > 1) {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={classes.navbeforebutton} onClick={prev_photo}>\r\n            <NavigateBeforeIcon fontSize=\"large\" />\r\n          </Button>\r\n\r\n          <Button className={classes.navnextbutton} onClick={next_photo}>\r\n            <NavigateNextIcon fontSize=\"large\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const radioGroup = () => {\r\n    if (data.images.length > 1) {\r\n      return (\r\n        <CardActions disableSpacing className={classes.radioGroup}>\r\n          {data.images.map((_, index) => {\r\n            return (\r\n              <Radio\r\n                checked={p_index === index}\r\n                onChange={handleRadioChange}\r\n                name=\"radio-button\"\r\n                size=\"small\"\r\n                value={index}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </CardActions>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleRadioChange = (e) => {\r\n    setIndex(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleImageClick = (e) => {\r\n    window.open(`${root_url}${data.images[p_index]}`, \"_blank\");\r\n  };\r\n\r\n  const handleFavClick = async (e) => {\r\n    if (!faved) {\r\n      try {\r\n        let res = await makeRequest(\r\n          \"/like/\" + data.id,\r\n          \"put\",\r\n          \"\",\r\n          \"application/json\",\r\n          { inc: true }\r\n        );\r\n        if (res.status === 200) {\r\n          setLikes(res.data);\r\n        } else {\r\n          console.log(res.status);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        return;\r\n      }\r\n      setFaved(true);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Card raised={false} className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"avatar\" className={classes.avatar}>\r\n            {name}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <div>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <DeleteIcon />\r\n                <Typography>Delete</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        }\r\n        title={`${data.title} @ ${data.location}`}\r\n        subheader={date.toString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${root_url}${data.images[p_index]}`}\r\n      >\r\n        {navButton()}\r\n\r\n        <Paper\r\n          onClick={handleImageClick}\r\n          className={classes.imageClick}\r\n          elevation={0}\r\n        />\r\n      </CardMedia>\r\n      {radioGroup()}\r\n      <CardContent>\r\n        <Typography variant={\"body2\"} color=\"textPrimary\" component=\"p\">\r\n          {data.text}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          aria-label=\"favorites\"\r\n          onClick={handleFavClick}\r\n          style={{ color: faved ? \"#f44336\" : \"default\" }}\r\n        >\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography>{`${likes}`}</Typography>\r\n        {/* <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton> */}\r\n        <IconButton className={classes.comment} aria-label=\"comment\">\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  data: {\r\n    id: String,\r\n    user: String,\r\n    title: String,\r\n    location: String,\r\n    time: Int32Array,\r\n    text: String,\r\n    images: Array,\r\n    likes: Int32Array,\r\n    comments: Array,\r\n  },\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/Gintama.003ffb3c.jpeg\";","import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport {\r\n  Fab,\r\n  Grid,\r\n  CircularProgress,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Post from \"../components/Post\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\nimport gintama from \"../res/Gintama.jpeg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    backgroundColor: \"#1565c0\",\r\n  },\r\n  card: {\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst usePostSearch = (pageNumber) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    console.log(pageNumber);\r\n    axios({\r\n      method: \"GET\",\r\n      url: root_url + \"/post\",\r\n      params: { page: pageNumber },\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n    })\r\n      .then((res) => {\r\n        setPosts((posts) => {\r\n          return posts.concat(res.data);\r\n        });\r\n        setHasMore(res.data.length > 0);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (axios.isCancel(err)) return;\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  return { loading, error, posts, hasMore };\r\n};\r\n\r\nconst Gallery = (props) => {\r\n  const classes = useStyles();\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const { posts, loading, error, hasMore } = usePostSearch(pageNumber);\r\n\r\n  const observer = useRef();\r\n  const lastPostRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPageNumber(pageNumber + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  const loadingButton = () => {\r\n    if (loading && !error) {\r\n      return (\r\n        <div className={classes.card}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    if (error) {\r\n      return (\r\n        <div className={classes.card}>\r\n          <Paper>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ width: \"95%\", paddingTop: \"0.5rem\" }}\r\n            >\r\n              Oops, looks like we failed to load the content. It is because\r\n              either you need a new service provider or the backend server is on\r\n              its vacation. It is definitely not due to any technical issues.\r\n            </Typography>\r\n            <img\r\n              src={gintama}\r\n              alt=\"error\"\r\n              style={{ width: \"95%\", paddingTop: \"0.5rem\" }}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                width: \"95%\",\r\n                paddingTop: \"0.5rem\",\r\n                paddingBottom: \"0.5rem\",\r\n              }}\r\n            >\r\n              Refresh the page to retry\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          {posts.map((post, index) => {\r\n            if (posts.length === index + 1) {\r\n              return (\r\n                <div className={classes.card} ref={lastPostRef} key={post.id}>\r\n                  <Post data={post} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div className={classes.card} key={post.id}>\r\n                  <Post data={post} />\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n          {loadingButton()}\r\n          {errorMessage()}\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n\r\n      <Link to=\"/newpost\" style={{ textDecoration: \"none\" }}>\r\n        <Fab color=\"primary\" className={classes.fab} aria-label=\"add\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    zIndex: 3,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        edge=\"start\"\r\n        onClick={handleDrawerToggle}\r\n        className={classes.menuButton}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          ></Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"persistent\"\r\n            open\r\n          ></Drawer>\r\n        </Hidden>\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n          dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n          ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum\r\n          quisque non tellus. Convallis convallis tellus id interdum velit\r\n          laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed\r\n          adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n          integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n          eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n          quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n          vivamus at augue. At augue eget arcu dictum varius duis at consectetur\r\n          lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa sapien\r\n          faucibus et molestie ac.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n          ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n          elementum integer enim neque volutpat ac tincidunt. Ornare suspendisse\r\n          sed nisi lacus sed viverra tellus. Purus sit amet volutpat consequat\r\n          mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis\r\n          risus sed vulputate odio. Morbi tincidunt ornare massa eget egestas\r\n          purus viverra accumsan in. In hendrerit gravida rutrum quisque non\r\n          tellus orci ac. Pellentesque nec nam aliquam sem et tortor. Habitant\r\n          morbi tristique senectus et. Adipiscing elit duis tristique\r\n          sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis\r\n          eleifend. Commodo viverra maecenas accumsan lacus vel facilisis. Nulla\r\n          posuere sollicitudin aliquam ultrices sagittis orci a.\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nconst About = (props) => {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Sidebar></Sidebar>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const getFormattedDate = () => {\r\n  const newDate = new Date();\r\n  let day = newDate.getUTCDate().toString();\r\n  let month = (newDate.getUTCMonth() + 1).toString();\r\n  let year = newDate.getUTCFullYear().toString();\r\n  if (day.length < 2) day = \"0\" + day;\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\nexport default getFormattedDate;\r\n","import React from \"react\";\r\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, open, Notification } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">{Notification}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n","import React from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  var color = \"primary\";\r\n  if (props.status < 0) {\r\n    color = \"secondary\";\r\n  }\r\n  const success = () => {\r\n    if (props.status === 0) {\r\n      return `${Math.round(props.value)}%`;\r\n    } else if (props.status === 1) {\r\n      return `Finished`;\r\n    } else if (props.status === -1) {\r\n      return `Error`;\r\n    } else {\r\n      return `Ready`;\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress color={color} variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {success()}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LinearProgressWithLabel;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getFormattedDate from \"../utils/misc\";\r\nimport makeRequest from \"../utils/network\";\r\nimport SimpleDialog from \"../components/Dialog\";\r\nimport LinearProgressWithLabel from \"../components/ProgressBar\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    minHeight: \"200px\",\r\n    padding: \"1rem\",\r\n  },\r\n  line: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    width: \"30%\",\r\n    spacing: theme.spacing(1),\r\n  },\r\n  location: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  date: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  description: {\r\n    width: \"95%\",\r\n  },\r\n  image: {\r\n    maxWidth: \"95%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  imageButton: {\r\n    backgroundColor: \"black\",\r\n    color: \"gray\",\r\n  },\r\n  publishButton: {\r\n    backgroundColor: \"inherit\",\r\n    color: \"orange\",\r\n  },\r\n}));\r\n\r\nconst NewPost = (props) => {\r\n  const classes = useStyles();\r\n  const [selectedImages, selectNew] = useState([]);\r\n  const [uploadFiles, setUploadFiles] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [date, setDate] = useState(Date.now());\r\n  const [token, setToken] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(true);\r\n  const [bodyError, setBodyError] = useState(true);\r\n  const [locationError, setLocationError] = useState(true);\r\n  const [dateError, setDateError] = useState(false);\r\n  const [tokenError, setTokenError] = useState(true);\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [transferState, setTransferState] = useState(2);\r\n\r\n  // title input logic\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTitleError(false);\r\n    } else {\r\n      setTitleError(true);\r\n    }\r\n  };\r\n\r\n  // set body description\r\n  const handleBodyChange = (event) => {\r\n    setBody(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setBodyError(false);\r\n    } else {\r\n      setBodyError(true);\r\n    }\r\n  };\r\n\r\n  const handleLocationChange = (event) => {\r\n    setLocation(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setLocationError(false);\r\n    } else {\r\n      setLocationError(true);\r\n    }\r\n  };\r\n\r\n  // set token\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTokenError(false);\r\n    } else {\r\n      setTokenError(true);\r\n    }\r\n  };\r\n\r\n  // set date\r\n  const handleDateChange = (event) => {\r\n    let dateStr = event.target.value.split(\"-\");\r\n    let newDate = new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\r\n    if (newDate.getTime() == null || newDate.getTime() > Date.now()) {\r\n      setDateError(true);\r\n    } else {\r\n      setDateError(false);\r\n      setDate(newDate.getTime());\r\n    }\r\n  };\r\n\r\n  // image selecting logic\r\n  const handleAddImage = (event) => {\r\n    setImageLoading(true);\r\n    let data = [];\r\n    const reader = new FileReader();\r\n    for (const f of event.target.files) {\r\n      uploadFiles.push(f);\r\n    }\r\n\r\n    const readFile = (index) => {\r\n      let file = event.target.files[index];\r\n      if (index >= event.target.files.length) {\r\n        selectNew(selectedImages.concat(data));\r\n        setImageLoading(false);\r\n        return;\r\n      }\r\n      reader.onload = (event) => {\r\n        data = data.concat(reader.result);\r\n        readFile(index + 1);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    readFile(0);\r\n  };\r\n\r\n  // image remove logic\r\n  const handleRemoveImage = (index) => {\r\n    return () => {\r\n      selectedImages.splice(index, 1);\r\n      selectNew(selectedImages.concat([]));\r\n      uploadFiles.splice(index, 1);\r\n      setUploadFiles(uploadFiles.concat([]));\r\n    };\r\n  };\r\n\r\n  // display loading circle\r\n  const loading = () => {\r\n    if (imageLoading) {\r\n      return (\r\n        <div className={classes.line}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // upload logic\r\n  const handleUpload = async (e) => {\r\n    if (\r\n      titleError ||\r\n      bodyError ||\r\n      dateError ||\r\n      locationError ||\r\n      uploadFiles.length === 0\r\n    ) {\r\n      handleClickOpenDialog();\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    setTransferState(0);\r\n\r\n    const total = uploadFiles.length + 1;\r\n    var images = [];\r\n    for (let i = 0; i < uploadFiles.length; i++) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"image\", uploadFiles[i]);\r\n\r\n      try {\r\n        let result = await makeRequest(\r\n          \"/image\",\r\n          \"post\",\r\n          token,\r\n          \"multipart/form-data\",\r\n          formdata\r\n        );\r\n        if (result.status === 200 || result.status === 208) {\r\n          images.push(result.data);\r\n          setProgress((100 * (i + 1)) / total);\r\n        } else {\r\n          setTransferState(-1);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      let result = await makeRequest(\r\n        \"/post\",\r\n        \"post\",\r\n        token,\r\n        \"application/json\",\r\n        {\r\n          user: \"Sky Zhang\",\r\n          title: title,\r\n          location: location,\r\n          time: date,\r\n          text: body,\r\n          images: images,\r\n          likes: 0,\r\n        }\r\n      );\r\n      if (result.status === 200) {\r\n        setProgress(100);\r\n        setTransferState(1);\r\n      } else {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    } catch (err) {\r\n      setTransferState(-1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Paper className={classes.root}>\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.title}\r\n                onChange={handleTitleChange}\r\n              />\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.location}\r\n                onChange={handleLocationChange}\r\n              />\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                error={dateError}\r\n                defaultValue={getFormattedDate()}\r\n                className={classes.date}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"text\"\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                error={bodyError}\r\n                rows={4}\r\n                rowsMax={4}\r\n                multiline\r\n                className={classes.description}\r\n                onChange={handleBodyChange}\r\n              />\r\n            </div>\r\n\r\n            {selectedImages.map((img, index) => (\r\n              <div className={classes.line} key={\"img\" + index.toString()}>\r\n                <img\r\n                  src={img}\r\n                  className={classes.image}\r\n                  onClick={handleRemoveImage(index)}\r\n                  alt=\"Failed to load\"\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            {loading()}\r\n\r\n            <div className={classes.line}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleAddImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <IconButton\r\n                  component=\"span\"\r\n                  className={classes.imageButton}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <AddPhotoAlternateIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"token\"\r\n                label=\"Pass Token\"\r\n                type=\"text\"\r\n                error={tokenError}\r\n                className={classes.title}\r\n                onChange={handleTokenChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <Button\r\n                className={classes.publishButton}\r\n                variant=\"outlined\"\r\n                onClick={handleUpload}\r\n                disabled={transferState === 0}\r\n              >\r\n                <PublishIcon></PublishIcon>\r\n                <Typography>Publish</Typography>\r\n              </Button>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <LinearProgressWithLabel\r\n                variant=\"determinate\"\r\n                status={transferState}\r\n                value={progress}\r\n              />\r\n            </div>\r\n\r\n            <SimpleDialog\r\n              open={openDialog}\r\n              onClose={handleCloseDialog}\r\n              Notification=\"Invalid Post\"\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    display: \"relative\",\r\n    backgroundColor: \"#1565c0\",\r\n  },\r\n  link: {\r\n    position: \"relative\",\r\n    top: \"1em\",\r\n    background: \"white\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"inherit\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.appbar} id=\"header\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={3} sm={2} lg={1}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>Gallery</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} sm={2} lg={1}>\r\n              <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>About</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            {/*middle spacing*/}\r\n            <Grid item xs={4} sm={7} lg={9} />\r\n\r\n            <Grid item xs={2} sm={1}>\r\n              <IconButton\r\n                aria-label=\"login\"\r\n                edge=\"end\"\r\n                className={classes.button}\r\n              >\r\n                <AccountCircleIcon size=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport About from \"./pages/About\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Header from \"./components/Header\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Gallery} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/newpost\" component={NewPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}