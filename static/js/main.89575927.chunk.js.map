{"version":3,"sources":["config/config.jsx","utils/network.jsx","components/Post.jsx","res/Gintama.jpeg","pages/Gallery.jsx","pages/About.jsx","utils/misc.jsx","components/Dialog.jsx","components/ProgressBar.jsx","pages/NewPost.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["root_url","makeRequest","path","method","auth","contentType","data","Promise","resolve","reject","axios","url","headers","Authorization","then","res","console","log","catch","err","useStyles","makeStyles","theme","card","height","media","paddingTop","position","objectFit","justifyContent","alignItems","backgroundColor","navbeforebutton","background","color","top","left","minHeight","minWidth","navnextbutton","right","imageClick","radioGroup","comment","marginLeft","avatar","red","Post","props","classes","React","useState","p_index","setIndex","anchorEl","setAnchorEl","faved","setFaved","likes","setLikes","date","Date","time","max","images","length","name","user","split","forEach","s","charAt","next_photo","prev_photo","handleRadioChange","e","parseInt","target","value","handleFavClick","a","id","inc","status","handleClose","Card","raised","className","CardHeader","Avatar","aria-label","action","IconButton","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Typography","title","location","subheader","toString","CardMedia","image","Fragment","Button","fontSize","Paper","window","elevation","CardActions","disableSpacing","map","_","index","Radio","checked","onChange","size","CardContent","variant","component","text","style","root","palette","paper","fab","bottom","spacing","Gallery","pageNumber","setPageNumber","posts","setPosts","loading","setLoading","error","setError","hasMore","setHasMore","useEffect","params","page","cancelToken","CancelToken","c","concat","isCancel","usePostSearch","observer","useRef","lastPostRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Grid","container","item","lg","xs","post","ref","CircularProgress","loadingButton","width","src","gintama","alt","paddingBottom","errorMessage","to","textDecoration","Fab","About","getFormattedDate","newDate","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","SimpleDialog","Notification","Dialog","aria-labelledby","DialogTitle","LinearProgressWithLabel","Box","display","mr","LinearProgress","Math","round","padding","line","description","maxWidth","input","imageButton","publishButton","NewPost","selectedImages","selectNew","uploadFiles","setUploadFiles","setTitle","body","setBody","setLocation","now","setDate","token","setToken","titleError","setTitleError","bodyError","setBodyError","locationError","setLocationError","dateError","setDateError","tokenError","setTokenError","imageLoading","setImageLoading","openDialog","setOpenDialog","progress","setProgress","transferState","setTransferState","handleRemoveImage","splice","handleUpload","total","i","formdata","FormData","append","result","push","TextField","label","type","defaultValue","InputLabelProps","shrink","dateStr","getTime","rows","rowsMax","multiline","img","accept","multiple","reader","FileReader","files","f","readFile","file","onload","readAsDataURL","htmlFor","disabled","link","button","margin","Header","AppBar","Toolbar","sm","edge","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89575927.chunk.js","sourcesContent":["export const root_url = \"https://oc43214.ml\";\r\n","import axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\n\r\nconst makeRequest = (path, method, auth, contentType, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      url: root_url + path,\r\n      method: method,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": contentType,\r\n        Authorization: auth,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default makeRequest;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Card,\r\n  MenuItem,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Avatar,\r\n  IconButton,\r\n  Typography,\r\n  Radio,\r\n  CardActionArea,\r\n  Paper,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextRounded\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { root_url } from \"../config/config\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport makeRequest from \"../utils/network\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  media: {\r\n    paddingTop: \"77.25%\", // 16:9\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    objectFit: \"fill\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#e8eaed\",\r\n  },\r\n  navbeforebutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  navnextbutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  imageClick: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    top: \"30%\",\r\n    right: \"30%\",\r\n    minHeight: \"40%\",\r\n    minWidth: \"40%\",\r\n  },\r\n  radioGroup: { justifyContent: \"center\" },\r\n  comment: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const [p_index, setIndex] = React.useState(0);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [faved, setFaved] = React.useState(false);\r\n  const [likes, setLikes] = React.useState(props.data.likes);\r\n\r\n  var date = new Date(props.data.time);\r\n  const max = props.data.images.length;\r\n  var name = \"\";\r\n\r\n  props.data.user.split(\" \").forEach((s) => {\r\n    name = name + s.charAt(0);\r\n  });\r\n\r\n  const next_photo = () => {\r\n    if (p_index + 1 === max) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(p_index + 1);\r\n    }\r\n  };\r\n\r\n  const prev_photo = () => {\r\n    if (p_index === 0) {\r\n      setIndex(max - 1);\r\n    } else {\r\n      setIndex(p_index - 1);\r\n    }\r\n  };\r\n\r\n  const navButton = () => {\r\n    if (props.data.images.length > 1) {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={classes.navbeforebutton} onClick={prev_photo}>\r\n            <NavigateBeforeIcon fontSize=\"large\" />\r\n          </Button>\r\n\r\n          <Button className={classes.navnextbutton} onClick={next_photo}>\r\n            <NavigateNextIcon fontSize=\"large\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const radioGroup = () => {\r\n    if (props.data.images.length > 1) {\r\n      return (\r\n        <CardActions disableSpacing className={classes.radioGroup}>\r\n          {props.data.images.map((_, index) => {\r\n            return (\r\n              <Radio\r\n                checked={p_index === index}\r\n                onChange={handleRadioChange}\r\n                name=\"radio-button\"\r\n                size=\"small\"\r\n                value={index}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </CardActions>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleRadioChange = (e) => {\r\n    setIndex(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleImageClick = (e) => {\r\n    window.open(`${root_url}${props.data.images[p_index]}`, \"_blank\");\r\n  };\r\n\r\n  const handleFavClick = async (e) => {\r\n    if (!faved) {\r\n      try {\r\n        let res = await makeRequest(\r\n          \"/like/\" + props.data.id,\r\n          \"put\",\r\n          \"\",\r\n          \"application/json\",\r\n          { inc: true }\r\n        );\r\n        if (res.status === 200) {\r\n          setLikes(res.data);\r\n        } else {\r\n          console.log(res.status);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        return;\r\n      }\r\n      setFaved(true);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Card raised={false} className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"avatar\" className={classes.avatar}>\r\n            {name}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <div>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <DeleteIcon />\r\n                <Typography>Delete</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        }\r\n        title={`${props.data.title} @ ${props.data.location}`}\r\n        subheader={date.toString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${root_url}${props.data.images[p_index]}`}\r\n      >\r\n        {navButton()}\r\n\r\n        <Paper\r\n          onClick={handleImageClick}\r\n          className={classes.imageClick}\r\n          elevation={0}\r\n        />\r\n      </CardMedia>\r\n      {radioGroup()}\r\n      <CardContent>\r\n        <Typography variant={\"body2\"} color=\"textPrimary\" component=\"p\">\r\n          {props.data.text}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          aria-label=\"favorites\"\r\n          onClick={handleFavClick}\r\n          style={{ color: faved ? \"#f44336\" : \"default\" }}\r\n        >\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography>{`${likes}`}</Typography>\r\n        {/* <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton> */}\r\n        <IconButton className={classes.comment} aria-label=\"comment\">\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/Gintama.003ffb3c.jpeg\";","import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport {\r\n  Fab,\r\n  Grid,\r\n  CircularProgress,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Post from \"../components/Post\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\nimport gintama from \"../res/Gintama.jpeg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  card: {\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst usePostSearch = (pageNumber) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    console.log(pageNumber);\r\n    axios({\r\n      method: \"GET\",\r\n      url: root_url + \"/post\",\r\n      params: { page: pageNumber },\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n    })\r\n      .then((res) => {\r\n        setPosts((posts) => {\r\n          return posts.concat(res.data);\r\n        });\r\n        setHasMore(res.data.length > 0);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (axios.isCancel(err)) return;\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  return { loading, error, posts, hasMore };\r\n};\r\n\r\nconst Gallery = (props) => {\r\n  const classes = useStyles();\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const { posts, loading, error, hasMore } = usePostSearch(pageNumber);\r\n\r\n  const observer = useRef();\r\n  const lastPostRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPageNumber(pageNumber + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  const loadingButton = () => {\r\n    if (loading && !error) {\r\n      return (\r\n        <div className={classes.card}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    if (error) {\r\n      return (\r\n        <div className={classes.card}>\r\n          <Paper>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ width: \"95%\", paddingTop: \"0.5rem\" }}\r\n            >\r\n              Oops, looks like we failed to load the content. It is because\r\n              either you need a new service provider or the backend server is on\r\n              its vacation. It is definitely not due to any technical issues.\r\n            </Typography>\r\n            <img\r\n              src={gintama}\r\n              alt=\"error\"\r\n              style={{ width: \"95%\", paddingTop: \"0.5rem\" }}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                width: \"95%\",\r\n                paddingTop: \"0.5rem\",\r\n                paddingBottom: \"0.5rem\",\r\n              }}\r\n            >\r\n              Refresh the page to retry\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <div>\r\n            {posts.map((post, index) => {\r\n              if (posts.length === index + 1) {\r\n                return (\r\n                  <div className={classes.card} ref={lastPostRef} key={post.id}>\r\n                    <Post data={post} />\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className={classes.card} key={post.id}>\r\n                    <Post data={post} />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          {loadingButton()}\r\n          {errorMessage()}\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n\r\n      <Link to=\"/newpost\" style={{ textDecoration: \"none\" }}>\r\n        <Fab color=\"primary\" className={classes.fab} aria-label=\"add\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h1\">This is about</Typography>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const getFormattedDate = () => {\r\n  const newDate = new Date();\r\n  let day = newDate.getUTCDate().toString();\r\n  let month = (newDate.getUTCMonth() + 1).toString();\r\n  let year = newDate.getUTCFullYear().toString();\r\n  if (day.length < 2) day = \"0\" + day;\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\nexport default getFormattedDate;\r\n","import React from \"react\";\r\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, open, Notification } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">{Notification}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n","import React from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  var color = \"primary\";\r\n  if (props.status < 0) {\r\n    color = \"secondary\";\r\n  }\r\n  const success = () => {\r\n    if (props.status === 0) {\r\n      return `${Math.round(props.value)}%`;\r\n    } else if (props.status === 1) {\r\n      return `Finished`;\r\n    } else if (props.status === -1) {\r\n      return `Error`;\r\n    } else {\r\n      return `Ready`;\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress color={color} variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {success()}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LinearProgressWithLabel;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getFormattedDate from \"../utils/misc\";\r\nimport makeRequest from \"../utils/network\";\r\nimport SimpleDialog from \"../components/Dialog\";\r\nimport LinearProgressWithLabel from \"../components/ProgressBar\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    minHeight: \"200px\",\r\n    padding: \"1rem\",\r\n  },\r\n  line: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    width: \"30%\",\r\n    spacing: theme.spacing(1),\r\n  },\r\n  location: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  date: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  description: {\r\n    width: \"95%\",\r\n  },\r\n  image: {\r\n    maxWidth: \"95%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  imageButton: {\r\n    backgroundColor: \"black\",\r\n    color: \"gray\",\r\n  },\r\n  publishButton: {\r\n    backgroundColor: \"inherit\",\r\n    color: \"orange\",\r\n  },\r\n}));\r\n\r\nconst NewPost = (props) => {\r\n  const classes = useStyles();\r\n  const [selectedImages, selectNew] = useState([]);\r\n  const [uploadFiles, setUploadFiles] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [date, setDate] = useState(Date.now());\r\n  const [token, setToken] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(true);\r\n  const [bodyError, setBodyError] = useState(true);\r\n  const [locationError, setLocationError] = useState(true);\r\n  const [dateError, setDateError] = useState(false);\r\n  const [tokenError, setTokenError] = useState(true);\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [transferState, setTransferState] = useState(2);\r\n\r\n  // title input logic\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTitleError(false);\r\n    } else {\r\n      setTitleError(true);\r\n    }\r\n  };\r\n\r\n  // set body description\r\n  const handleBodyChange = (event) => {\r\n    setBody(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setBodyError(false);\r\n    } else {\r\n      setBodyError(true);\r\n    }\r\n  };\r\n\r\n  const handleLocationChange = (event) => {\r\n    setLocation(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setLocationError(false);\r\n    } else {\r\n      setLocationError(true);\r\n    }\r\n  };\r\n\r\n  // set token\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTokenError(false);\r\n    } else {\r\n      setTokenError(true);\r\n    }\r\n  };\r\n\r\n  // set date\r\n  const handleDateChange = (event) => {\r\n    let dateStr = event.target.value.split(\"-\");\r\n    let newDate = new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\r\n    if (newDate.getTime() == null || newDate.getTime() > Date.now()) {\r\n      setDateError(true);\r\n    } else {\r\n      setDateError(false);\r\n      setDate(newDate.getTime());\r\n    }\r\n  };\r\n\r\n  // image selecting logic\r\n  const handleAddImage = (event) => {\r\n    setImageLoading(true);\r\n    let data = [];\r\n    const reader = new FileReader();\r\n    for (const f of event.target.files) {\r\n      uploadFiles.push(f);\r\n    }\r\n\r\n    const readFile = (index) => {\r\n      let file = event.target.files[index];\r\n      if (index >= event.target.files.length) {\r\n        selectNew(selectedImages.concat(data));\r\n        setImageLoading(false);\r\n        return;\r\n      }\r\n      reader.onload = (event) => {\r\n        data = data.concat(reader.result);\r\n        readFile(index + 1);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    readFile(0);\r\n  };\r\n\r\n  // image remove logic\r\n  const handleRemoveImage = (index) => {\r\n    return () => {\r\n      selectedImages.splice(index, 1);\r\n      selectNew(selectedImages.concat([]));\r\n      uploadFiles.splice(index, 1);\r\n      setUploadFiles(uploadFiles.concat([]));\r\n    };\r\n  };\r\n\r\n  // display loading circle\r\n  const loading = () => {\r\n    if (imageLoading) {\r\n      return (\r\n        <div className={classes.line}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // upload logic\r\n  const handleUpload = async (e) => {\r\n    if (\r\n      titleError ||\r\n      bodyError ||\r\n      dateError ||\r\n      locationError ||\r\n      uploadFiles.length === 0\r\n    ) {\r\n      handleClickOpenDialog();\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    setTransferState(0);\r\n\r\n    const total = uploadFiles.length + 1;\r\n    var images = [];\r\n    for (let i = 0; i < uploadFiles.length; i++) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"image\", uploadFiles[i]);\r\n\r\n      try {\r\n        let result = await makeRequest(\r\n          \"/image\",\r\n          \"post\",\r\n          token,\r\n          \"multipart/form-data\",\r\n          formdata\r\n        );\r\n        if (result.status === 200 || result.status === 208) {\r\n          images.push(result.data);\r\n          setProgress((100 * (i + 1)) / total);\r\n        } else {\r\n          setTransferState(-1);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      let result = await makeRequest(\r\n        \"/post\",\r\n        \"post\",\r\n        token,\r\n        \"application/json\",\r\n        {\r\n          user: \"Sky Zhang\",\r\n          title: title,\r\n          location: location,\r\n          time: date,\r\n          text: body,\r\n          images: images,\r\n          likes: 0,\r\n        }\r\n      );\r\n      if (result.status === 200) {\r\n        setProgress(100);\r\n        setTransferState(1);\r\n      } else {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    } catch (err) {\r\n      setTransferState(-1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Paper className={classes.root}>\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.title}\r\n                onChange={handleTitleChange}\r\n              />\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.location}\r\n                onChange={handleLocationChange}\r\n              />\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                error={dateError}\r\n                defaultValue={getFormattedDate()}\r\n                className={classes.date}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"text\"\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                error={bodyError}\r\n                rows={4}\r\n                rowsMax={4}\r\n                multiline\r\n                className={classes.description}\r\n                onChange={handleBodyChange}\r\n              />\r\n            </div>\r\n\r\n            {selectedImages.map((img, index) => (\r\n              <div className={classes.line} key={\"img\" + index.toString()}>\r\n                <img\r\n                  src={img}\r\n                  className={classes.image}\r\n                  onClick={handleRemoveImage(index)}\r\n                  alt=\"Failed to load\"\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            {loading()}\r\n\r\n            <div className={classes.line}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleAddImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <IconButton\r\n                  component=\"span\"\r\n                  className={classes.imageButton}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <AddPhotoAlternateIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"token\"\r\n                label=\"Pass Token\"\r\n                type=\"text\"\r\n                error={tokenError}\r\n                className={classes.title}\r\n                onChange={handleTokenChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <Button\r\n                className={classes.publishButton}\r\n                variant=\"outlined\"\r\n                onClick={handleUpload}\r\n                disabled={transferState === 0}\r\n              >\r\n                <PublishIcon></PublishIcon>\r\n                <Typography>Publish</Typography>\r\n              </Button>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <LinearProgressWithLabel\r\n                variant=\"determinate\"\r\n                status={transferState}\r\n                value={progress}\r\n              />\r\n            </div>\r\n\r\n            <SimpleDialog\r\n              open={openDialog}\r\n              onClose={handleCloseDialog}\r\n              Notification=\"Invalid Post\"\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  link: {\r\n    position: \"relative\",\r\n    top: \"1em\",\r\n    background: \"white\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={3} sm={2} lg={1}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>Gallery</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} sm={2} lg={1}>\r\n              <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>About</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            {/*middle spacing*/}\r\n            <Grid item xs={5} sm={7} lg={9} />\r\n\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                aria-label=\"login\"\r\n                edge=\"end\"\r\n                className={classes.button}\r\n              >\r\n                <AccountCircleIcon size=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport About from \"./pages/About\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Header from \"./components/Header\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Gallery} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/newpost\" component={NewPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}