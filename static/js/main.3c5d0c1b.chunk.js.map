{"version":3,"sources":["config/config.jsx","components/Post.jsx","pages/Gallery.jsx","pages/About.jsx","utils/misc.jsx","utils/network.jsx","components/Dialog.jsx","components/ProgressBar.jsx","pages/NewPost.jsx","components/DateDrawer.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["root_url","useStyles","makeStyles","theme","card","height","media","paddingTop","position","objectFit","justifyContent","alignItems","navbeforebutton","background","color","top","left","minHeight","minWidth","navnextbutton","right","imageClick","radioGroup","comment","marginLeft","avatar","backgroundColor","red","Post","props","classes","React","useState","p_index","setIndex","anchorEl","setAnchorEl","date","Date","data","time","max","images","length","name","user","split","forEach","s","charAt","next_photo","prev_photo","handleRadioChange","e","parseInt","target","value","handleClose","Card","raised","CardHeader","Avatar","aria-label","className","action","IconButton","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","title","location","subheader","toString","CardMedia","image","component","Fragment","Button","fontSize","Paper","window","elevation","CardActions","disableSpacing","map","_","index","Radio","checked","onChange","size","CardContent","variant","text","root","palette","paper","fab","bottom","spacing","Gallery","pageNumber","setPageNumber","posts","setPosts","loading","setLoading","error","setError","hasMore","setHasMore","useEffect","console","log","axios","method","url","params","page","cancelToken","CancelToken","c","then","res","concat","catch","err","isCancel","usePostSearch","observer","useRef","lastPostRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Grid","container","item","lg","xs","post","ref","CircularProgress","loadingButton","to","style","textDecoration","Fab","About","getFormattedDate","newDate","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","makeRequest","path","auth","contentType","Promise","resolve","reject","headers","Authorization","SimpleDialog","Notification","Dialog","aria-labelledby","DialogTitle","LinearProgressWithLabel","status","Box","display","width","mr","LinearProgress","Math","round","padding","line","description","maxWidth","input","imageButton","publishButton","NewPost","selectedImages","selectNew","uploadFiles","setUploadFiles","setTitle","body","setBody","setLocation","now","setDate","token","setToken","titleError","setTitleError","bodyError","setBodyError","locationError","setLocationError","dateError","setDateError","tokenError","setTokenError","imageLoading","setImageLoading","openDialog","setOpenDialog","progress","setProgress","transferState","setTransferState","handleRemoveImage","splice","handleUpload","a","total","i","formdata","FormData","append","result","push","TextField","label","type","defaultValue","InputLabelProps","shrink","dateStr","getTime","rows","rowsMax","multiline","img","src","alt","accept","multiple","reader","FileReader","files","f","readFile","file","onload","readAsDataURL","htmlFor","disabled","drawer","breakpoints","up","flexShrink","drawerPaper","DateDrawer","Drawer","anchor","Toggle","ModalProps","toolbar","List","ListItem","button","ListItemText","primary","link","margin","Header","drawerOpen","setDrawerOpen","handleDrawerToggle","AppBar","Toolbar","md","exact","edge","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5d0c1b.chunk.js","sourcesContent":["export const root_url = \"http://66.75.241.198:8080\";\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Card,\r\n  MenuItem,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Avatar,\r\n  IconButton,\r\n  Typography,\r\n  Radio,\r\n  CardActionArea,\r\n  Paper,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextRounded\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { root_url } from \"../config/config\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  media: {\r\n    paddingTop: \"77.25%\", // 16:9\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    objectFit: \"fill\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  navbeforebutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  navnextbutton: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    color: \"black\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    minHeight: \"100%\",\r\n    minWidth: \"10%\",\r\n  },\r\n  imageClick: {\r\n    position: \"absolute\",\r\n    background: \"transparent\",\r\n    top: \"30%\",\r\n    right: \"30%\",\r\n    minHeight: \"40%\",\r\n    minWidth: \"40%\",\r\n  },\r\n  radioGroup: { justifyContent: \"center\" },\r\n  comment: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const [p_index, setIndex] = React.useState(0);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  var date = new Date(props.data.time);\r\n  const max = props.data.images.length;\r\n  var name = \"\";\r\n\r\n  props.data.user.split(\" \").forEach((s) => {\r\n    name = name + s.charAt(0);\r\n  });\r\n\r\n  const next_photo = () => {\r\n    if (p_index + 1 === max) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(p_index + 1);\r\n    }\r\n  };\r\n\r\n  const prev_photo = () => {\r\n    if (p_index === 0) {\r\n      setIndex(max - 1);\r\n    } else {\r\n      setIndex(p_index - 1);\r\n    }\r\n  };\r\n\r\n  const navButton = () => {\r\n    if (props.data.images.length > 1) {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={classes.navbeforebutton} onClick={prev_photo}>\r\n            <NavigateBeforeIcon fontSize=\"large\" />\r\n          </Button>\r\n\r\n          <Button className={classes.navnextbutton} onClick={next_photo}>\r\n            <NavigateNextIcon fontSize=\"large\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const radioGroup = () => {\r\n    if (props.data.images.length > 1) {\r\n      return (\r\n        <CardActions disableSpacing className={classes.radioGroup}>\r\n          {props.data.images.map((_, index) => {\r\n            return (\r\n              <Radio\r\n                checked={p_index === index}\r\n                onChange={handleRadioChange}\r\n                name=\"radio-button\"\r\n                size=\"small\"\r\n                value={index}\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </CardActions>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleRadioChange = (e) => {\r\n    setIndex(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleImageClick = (e) => {\r\n    window.open(`${root_url}${props.data.images[p_index]}`, \"_blank\");\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Card raised={false}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"avatar\" className={classes.avatar}>\r\n            {name}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <div>\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <DeleteIcon />\r\n                <Typography>Delete</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        }\r\n        title={`${props.data.title} @ ${props.data.location}`}\r\n        subheader={date.toString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`${root_url}${props.data.images[p_index]}`}\r\n        component=\"iframeM\"\r\n      >\r\n        {navButton()}\r\n\r\n        <Paper\r\n          onClick={handleImageClick}\r\n          className={classes.imageClick}\r\n          elevation={0}\r\n        />\r\n      </CardMedia>\r\n      {radioGroup()}\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          {props.data.text}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton className={classes.comment} aria-label=\"comment\">\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Fab, Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Post from \"../components/Post\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    minHeight: 200,\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  card: {\r\n    paddingTop: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nconst usePostSearch = (pageNumber) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    console.log(pageNumber);\r\n    axios({\r\n      method: \"GET\",\r\n      url: root_url + \"/post\",\r\n      params: { page: pageNumber },\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n    })\r\n      .then((res) => {\r\n        setPosts((posts) => {\r\n          return posts.concat(res.data);\r\n        });\r\n        setHasMore(res.data.length > 0);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (axios.isCancel(err)) return;\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  }, [pageNumber]);\r\n\r\n  return { loading, error, posts, hasMore };\r\n};\r\n\r\nconst Gallery = (props) => {\r\n  const classes = useStyles();\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const { posts, loading, error, hasMore } = usePostSearch(pageNumber);\r\n\r\n  const observer = useRef();\r\n  const lastPostRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPageNumber(pageNumber + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  const loadingButton = () => {\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <div>\r\n            {posts.map((post, index) => {\r\n              if (posts.length === index + 1) {\r\n                return (\r\n                  <div className={classes.card} ref={lastPostRef} key={post.id}>\r\n                    <Post data={post} />\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className={classes.card} key={post.id}>\r\n                    <Post data={post} />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          {loadingButton()}\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n\r\n      <Link to=\"/newpost\" style={{ textDecoration: \"none\" }}>\r\n        <Fab color=\"primary\" className={classes.fab} aria-label=\"add\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h1\">This is about</Typography>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const getFormattedDate = () => {\r\n  const newDate = new Date();\r\n  let day = newDate.getUTCDate().toString();\r\n  let month = (newDate.getUTCMonth() + 1).toString();\r\n  let year = newDate.getUTCFullYear().toString();\r\n  if (day.length < 2) day = \"0\" + day;\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n};\r\n\r\nexport default getFormattedDate;\r\n","import axios from \"axios\";\r\nimport { root_url } from \"../config/config\";\r\n\r\nconst makeRequest = (path, method, auth, contentType, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      url: root_url + path,\r\n      method: method,\r\n      data: data,\r\n      headers: {\r\n        \"Content-Type\": contentType,\r\n        Authorization: auth,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default makeRequest;\r\n","import React from \"react\";\r\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, open, Notification } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">{Notification}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SimpleDialog;\r\n","import React from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  var color = \"primary\";\r\n  if (props.status < 0) {\r\n    color = \"secondary\";\r\n  }\r\n  const success = () => {\r\n    if (props.status === 0) {\r\n      return `${Math.round(props.value)}%`;\r\n    } else if (props.status === 1) {\r\n      return `Finished`;\r\n    } else if (props.status === -1) {\r\n      return `Error`;\r\n    } else {\r\n      return `Ready`;\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress color={color} variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {success()}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LinearProgressWithLabel;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport getFormattedDate from \"../utils/misc\";\r\nimport makeRequest from \"../utils/network\";\r\nimport SimpleDialog from \"../components/Dialog\";\r\nimport LinearProgressWithLabel from \"../components/ProgressBar\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    minHeight: \"200px\",\r\n    padding: \"1rem\",\r\n  },\r\n  line: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    width: \"30%\",\r\n    spacing: theme.spacing(1),\r\n  },\r\n  location: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  date: {\r\n    width: \"30%\",\r\n    marginLeft: \"2.5%\",\r\n  },\r\n  description: {\r\n    width: \"95%\",\r\n  },\r\n  image: {\r\n    maxWidth: \"95%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  imageButton: {\r\n    backgroundColor: \"black\",\r\n    color: \"gray\",\r\n  },\r\n  publishButton: {\r\n    backgroundColor: \"inherit\",\r\n    color: \"orange\",\r\n  },\r\n}));\r\n\r\nconst NewPost = (props) => {\r\n  const classes = useStyles();\r\n  const [selectedImages, selectNew] = useState([]);\r\n  const [uploadFiles, setUploadFiles] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [date, setDate] = useState(Date.now());\r\n  const [token, setToken] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(true);\r\n  const [bodyError, setBodyError] = useState(true);\r\n  const [locationError, setLocationError] = useState(true);\r\n  const [dateError, setDateError] = useState(false);\r\n  const [tokenError, setTokenError] = useState(true);\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [transferState, setTransferState] = useState(2);\r\n\r\n  // title input logic\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTitleError(false);\r\n    } else {\r\n      setTitleError(true);\r\n    }\r\n  };\r\n\r\n  // set body description\r\n  const handleBodyChange = (event) => {\r\n    setBody(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setBodyError(false);\r\n    } else {\r\n      setBodyError(true);\r\n    }\r\n  };\r\n\r\n  const handleLocationChange = (event) => {\r\n    setLocation(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setLocationError(false);\r\n    } else {\r\n      setLocationError(true);\r\n    }\r\n  };\r\n\r\n  // set token\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setTokenError(false);\r\n    } else {\r\n      setTokenError(true);\r\n    }\r\n  };\r\n\r\n  // set date\r\n  const handleDateChange = (event) => {\r\n    let dateStr = event.target.value.split(\"-\");\r\n    let newDate = new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\r\n    if (newDate.getTime() == null || newDate.getTime() > Date.now()) {\r\n      setDateError(true);\r\n    } else {\r\n      setDateError(false);\r\n      setDate(newDate.getTime());\r\n    }\r\n  };\r\n\r\n  // image selecting logic\r\n  const handleAddImage = (event) => {\r\n    setImageLoading(true);\r\n    let data = [];\r\n    const reader = new FileReader();\r\n    for (const f of event.target.files) {\r\n      uploadFiles.push(f);\r\n    }\r\n\r\n    const readFile = (index) => {\r\n      let file = event.target.files[index];\r\n      if (index >= event.target.files.length) {\r\n        selectNew(selectedImages.concat(data));\r\n        setImageLoading(false);\r\n        return;\r\n      }\r\n      reader.onload = (event) => {\r\n        data = data.concat(reader.result);\r\n        readFile(index + 1);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    readFile(0);\r\n  };\r\n\r\n  // image remove logic\r\n  const handleRemoveImage = (index) => {\r\n    return () => {\r\n      selectedImages.splice(index, 1);\r\n      selectNew(selectedImages.concat([]));\r\n      uploadFiles.splice(index, 1);\r\n      setUploadFiles(uploadFiles.concat([]));\r\n    };\r\n  };\r\n\r\n  // display loading circle\r\n  const loading = () => {\r\n    if (imageLoading) {\r\n      return (\r\n        <div className={classes.line}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // upload logic\r\n  const handleUpload = async (e) => {\r\n    if (\r\n      titleError ||\r\n      bodyError ||\r\n      dateError ||\r\n      locationError ||\r\n      uploadFiles.length === 0\r\n    ) {\r\n      handleClickOpenDialog();\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    setTransferState(0);\r\n\r\n    const total = uploadFiles.length + 1;\r\n    var images = [];\r\n    for (let i = 0; i < uploadFiles.length; i++) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"image\", uploadFiles[i]);\r\n\r\n      try {\r\n        let result = await makeRequest(\r\n          \"/image\",\r\n          \"post\",\r\n          token,\r\n          \"multipart/form-data\",\r\n          formdata\r\n        );\r\n        if (result.status === 200 || result.status === 208) {\r\n          images.push(result.data);\r\n          setProgress((100 * (i + 1)) / total);\r\n        } else {\r\n          setTransferState(-1);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      let result = await makeRequest(\r\n        \"/post\",\r\n        \"post\",\r\n        token,\r\n        \"application/json\",\r\n        {\r\n          user: \"Sky Zhang\",\r\n          title: title,\r\n          location: location,\r\n          time: date,\r\n          text: body,\r\n          images: images,\r\n        }\r\n      );\r\n      if (result.status === 200) {\r\n        setProgress(100);\r\n        setTransferState(1);\r\n      } else {\r\n        setTransferState(-1);\r\n        return;\r\n      }\r\n    } catch (err) {\r\n      setTransferState(-1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={3}></Grid>\r\n\r\n        <Grid item xs={12} lg={6}>\r\n          <Paper className={classes.root}>\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.title}\r\n                onChange={handleTitleChange}\r\n              />\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                type=\"text\"\r\n                error={titleError}\r\n                className={classes.location}\r\n                onChange={handleLocationChange}\r\n              />\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                error={dateError}\r\n                defaultValue={getFormattedDate()}\r\n                className={classes.date}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={handleDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"text\"\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                error={bodyError}\r\n                rows={4}\r\n                rowsMax={4}\r\n                multiline\r\n                className={classes.description}\r\n                onChange={handleBodyChange}\r\n              />\r\n            </div>\r\n\r\n            {selectedImages.map((img, index) => (\r\n              <div className={classes.line} key={\"img\" + index.toString()}>\r\n                <img\r\n                  src={img}\r\n                  className={classes.image}\r\n                  onClick={handleRemoveImage(index)}\r\n                  alt=\"Failed to load\"\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            {loading()}\r\n\r\n            <div className={classes.line}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleAddImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <IconButton\r\n                  component=\"span\"\r\n                  className={classes.imageButton}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <AddPhotoAlternateIcon />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <TextField\r\n                id=\"token\"\r\n                label=\"Pass Token\"\r\n                type=\"text\"\r\n                error={tokenError}\r\n                className={classes.title}\r\n                onChange={handleTokenChange}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <Button\r\n                className={classes.publishButton}\r\n                variant=\"outlined\"\r\n                onClick={handleUpload}\r\n                disabled={transferState === 0}\r\n              >\r\n                <PublishIcon></PublishIcon>\r\n                <Typography>Publish</Typography>\r\n              </Button>\r\n            </div>\r\n\r\n            <div className={classes.line}>\r\n              <LinearProgressWithLabel\r\n                variant=\"determinate\"\r\n                status={transferState}\r\n                value={progress}\r\n              />\r\n            </div>\r\n\r\n            <SimpleDialog\r\n              open={openDialog}\r\n              onClose={handleCloseDialog}\r\n              Notification=\"Invalid Post\"\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item lg={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n}));\r\n\r\nconst DateDrawer = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        onClose={props.Toggle}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n      >\r\n        <div>\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {[\"May\", \"April\", \"March\", \"Feburary\"].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DateDrawer;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DateDrawer from \"./DateDrawer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  link: {\r\n    position: \"relative\",\r\n    top: \"1em\",\r\n    background: \"white\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2} md={1}>\r\n              <Route exact path=\"/\">\r\n                <IconButton\r\n                  aria-label=\"dates\"\r\n                  edge=\"end\"\r\n                  className={classes.button}\r\n                  onClick={handleDrawerToggle}\r\n                >\r\n                  <DateRangeIcon />\r\n                </IconButton>\r\n              </Route>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>Gallery</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} md={2} lg={1}>\r\n              <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Button className={classes.link}>About</Button>\r\n              </Link>\r\n            </Grid>\r\n\r\n            {/*middle spacing*/}\r\n            <Grid item xs={2} md={6} lg={8} />\r\n\r\n            <Grid item xs={2} md={1}>\r\n              <IconButton\r\n                aria-label=\"login\"\r\n                edge=\"end\"\r\n                className={classes.button}\r\n              >\r\n                <AccountCircleIcon size=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n\r\n      <Route exact path=\"/\">\r\n        <DateDrawer open={drawerOpen} Toggle={handleDrawerToggle} />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport About from \"./pages/About\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Header from \"./components/Header\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Gallery} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/newpost\" component={NewPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}